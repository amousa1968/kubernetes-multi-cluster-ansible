---
- name: Set up Kubernetes multi-cluster environment
  hosts: all
  gather_facts: yes
  become: yes
  vars_files:
    - "inventories/{{ inventory }}/group_vars/all.yml"
  
  roles:
    - role: common
      tags: common
    - role: kubernetes
      tags: kubernetes

- name: Initialize master nodes
  hosts: master
  gather_facts: yes
  become: yes
  vars_files:
    - "inventories/{{ inventory }}/group_vars/master.yml"
  
  tasks:
    - name: Create kubeadm configuration
      template:
        src: roles/kubernetes/templates/kubeadm-config.yaml.j2
        dest: /etc/kubernetes/kubeadm-config.yaml
        mode: '0644'

    - name: Initialize Kubernetes cluster
      command: kubeadm init --config /etc/kubernetes/kubeadm-config.yaml --upload-certs
      args:
        chdir: /root
      register: kubeadm_init
      when: inventory_hostname == groups['master'][0]

    - name: Save join command
      copy:
        content: |
          #!/bin/bash
          {{ kubeadm_init.stdout | regex_search('kubeadm join.*?--discovery-token-ca-cert-hash \\S+') }}
        dest: "/root/join-command.sh"
        mode: '0700'
      when: inventory_hostname == groups['master'][0]

    - name: Set up kubeconfig for root user
      block:
        - name: Create .kube directory
          file:
            path: /root/.kube
            state: directory
            mode: '0700'
        
        - name: Copy admin.conf
          copy:
            src: /etc/kubernetes/admin.conf
            dest: /root/.kube/config
            remote_ssrc: yes
            mode: '0600'
      when: inventory_hostname == groups['master'][0]

    - name: Install Calico network plugin
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      when: inventory_hostname == groups['master'][0]

- name: Join worker nodes to cluster
  hosts: worker
  gather_facts: yes
  become: yes
  vars_files:
    - "inventories/{{ inventory }}/group_vars/worker.yml"
  
  tasks:
    - name: Copy join command from first master
      synchronize:
        src: /root/join-command.sh
        dest: /tmp/join-command.sh
        mode: pull
        delegate_to: "{{ groups['master'][0] }}"
    
    - name: Join worker to cluster
      command: bash /tmp/join-command.sh
      args:
        chdir: /root
